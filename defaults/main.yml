---

###
# Username to use for initiating SSH connections as from server to client
###
restic_remote_server_user: "{{ restic_server_user | default('rest-server') }}"

###
# Groupname checked against asserting that a SSH private/public keypair exists
# on the server
###
restic_remote_server_group: "{{ restic_server_group | default('rest-server') }}"

###
# Port to use on client side to terminate SSH tunnel coming from the backup
# server. Set to a port not used by something else on the client. Defaults to
# the same port the 'restic_server' role uses to let the REST server listen on.
###
restic_remote_client_port: "{{ restic_server_listen_port | default('3000') }}"

###
# Username to use for SSH connections from server to client, and user which
# starts the `restic-backup.service` via sudo on the client.
###
restic_remote_client_user: "{{ restic_client_user | default('restic') }}"

###
# SSH port of the client, which will be used by the backup server to connect.
###
restic_remote_ssh_port: "22"

###
# Groupname getting granted `sudo` privileges on client to start systemd
# services `restic-backup.service` and `restic-prune.service`. The client's
# user must be in this group.
###
restic_remote_client_group: "{{ restic_client_group | default('restic') }}"

###
# Repeat from 'restic_client' role to check whether client should be configured
# to be backed up remotely by the backup server.
###
restic_remote_client_is_remote: "{{ restic_client_is_remote | default(false) }}"

###
# Do not show sensible content when printed by 'ansible-playbook' runs.
# Set to 'false' for debugging e.g. repository file templating.
###
restic_remote_no_log: true
